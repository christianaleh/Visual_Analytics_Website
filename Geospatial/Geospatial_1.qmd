---
title: "Geospatial One"
author: Christiana Lim
date: "1 Feb 2024"
date-modified: "`r Sys.Date()`"
execute: 
  echo: true
  eval: true
  warning: false
format: 
  html: 
    page-layout: full
---

# Calendar Heatmap

```{r}
pacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, tidyverse, readxl, knitr, data.table)
```

```{r}
attacks <- read_csv("data/eventlog.csv")
```

Check the data by querying for head and there are 3 columns available.

```{r}
kable(head(attacks))
```

Data preparation: Derive *weekday* and *hour of day* fields by creating a function. ymd_hms() and hour() are from the lubridate package and weekdays() is a base R function.

```{r}
make_hr_wkday <- function(ts, sc, tz){
  real_times <- ymd_hms(ts,
                        tz = tz[1],
                        quiet = TRUE)
  dt <- data.table(source_country = sc,
                   wkday = weekdays(real_times),
                   hour = hour(real_times))
  return(dt)
}

```

Step 2: deriving the attacks tibble data frame

```{r}
wkday_levels <- c('Saturday', 'Friday', 
                  'Thursday', 'Wednesday', 
                  'Tuesday', 'Monday', 
                  'Sunday')

attacks <- attacks %>% 
  group_by(tz) %>% 
  do(make_hr_wkday(.$timestamp, 
                   .$source_country, 
                   .$tz)) %>% 
  ungroup() %>% 
  mutate(wkday = factor(
    wkday, levels = wkday_levels),
    hour = factor(
      hour, levels = 0:23))
```

```{r}
kable(head(attacks))
```

Build the Calendar Heatmap:

```{r}
grouped <- attacks %>%
  count(wkday, hour) %>%
  ungroup() %>%
  na.omit()

ggplot(grouped,
       aes(hour,
           wkday,
           fill = n)) +
geom_tile(color = "white",
          size = 0.1) + 
theme_tufte(base_family = "Helvetica") + 
coord_equal() + 
scale_fill_gradient(name = "# of attacks",
                    low = "sky blue", 
                    high = "dark blue") + 
labs(x = NULL,
     y = NULL,
     title = "Attacks by weekday and time of day") + 
theme(axis.ticks = element_blank(),
      plot.title = element_text(hjust = 0.5),
      legend.title = element_text(size = 8),
      legend.text = element_text(size = 6))
```

Plotting Multiple Calendar Heatmaps

Step 1: Deriving attack by country object

```{r}
attacks_by_country <- count(
  attacks, source_country) %>% 
  mutate(percent = percent(n/sum(n))) %>% 
  arrange(desc(n))
```

Step 2: preparing the tidy data frame

```{r}
top4 <- attacks_by_country$source_country[1:4]
top4_attacks <- attacks %>% 
  filter(source_country %in% top4) %>%
  count(source_country, wkday, hour) %>%
  ungroup() %>%
  mutate(source_country = factor(
    source_country, levels = top4)) %>%
  na.omit()
```

Step 3: Plotting the multiple calendar heatmap by using ggplot2 package

```{r}
ggplot(top4_attacks, 
       aes(hour,
           wkday,
           fill = n)) +
  geom_tile(color = "white",
            size = 0.1) + 
  theme_tufte(base_family = "Helvetica") +
  coord_equal() + 
  scale_fill_gradient(name = "# of attacks",
                      low = "sky blue",
                      high = "dark blue") +
  facet_wrap(~source_country, ncol = 2) + 
  labs(x = NULL, y = NULL,
       title = "Attacks on top 4 countries by weekday and time of day") +
  theme(axis.ticks = element_blank(),
        axis.text.x = element_text(size = 7),
        plot.title = element_text(hjust = 0.5),
        legend.title = element_text(size = 8),
        legend.text = element_text(size = 6)) 
```

# Cycle Plot

## Data Preparation

```{r}
air <- read_excel("data/arrivals_by_air.xlsx")
```

Derive month and year fields

```{r}
air$month <- factor(month(air$`Month-Year`),
                    levels = 1:12,
                    labels = month.abb,
                    ordered = TRUE)
air$year <- year(ymd(air$`Month-Year`))
```

Extracting target country

```{r}
Vietnam <- air %>%
  select(`Vietnam`, 
         month, 
         year) %>%
  filter(year >= 2010)
```

Computing year average arrivals by month

```{r}
hline.data <- Vietnam %>% 
  group_by(month) %>%
  summarise(avgvalue = mean(`Vietnam`))
```

Plotting the cycle plot

```{r}
ggplot() +
  geom_line(data = Vietnam,
            aes(x = year, 
            y = `Vietnam`,
            group = month),
            color = "black") + 
  geom_hline(aes(yintercept = avgvalue),
             data=hline.data, 
             linetype = 6,
             color = "red",
             size = 0.5) + 
  facet_grid(~month) + 
  labs(axis.text.x = element_blank(),
       title = "visitor arrivals from Vietnam by air, Jan 20210 to Dec 2019") + 
  xlab(" ") + 
  ylab("No. of Visitors")

```
