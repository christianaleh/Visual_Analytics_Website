[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-On-Exercise/Hands_On_Exercise_3.html",
    "href": "Hands-On-Exercise/Hands_On_Exercise_3.html",
    "title": "Hands_On_Exercise_3",
    "section": "",
    "text": "library(tidyverse)\nlibrary(ggplot2)\nlibrary(ggiraph)\n\n\nexamdata <- read_csv(\"data_inclass2/Exam_data.csv\")\n\n\np <- ggplot(data=examdata, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\ntooltip <- function(y, ymax, accuracy = .01) {   #<<\n  mean <- scales::number(y, accuracy = accuracy) #<<\n  sem <- scales::number(ymax - y, accuracy = accuracy) #<<\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem) #<<\n} #<<\n\ngg_point <- ggplot(data=examdata, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  #<<\n                     tooltip(y, ymax))),  #<<\n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  #<<\n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\nCoordinated multi-views with ggiraph\n\nlibrary(patchwork)\n\np1 <- ggplot(data=examdata, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + #<<\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 <- ggplot(data=examdata, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + #<<\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 / p2), #<<\n       width_svg = 6,\n       height_svg = 6,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-On-Exercise/In-class-ex-2.html",
    "href": "Hands-On-Exercise/In-class-ex-2.html",
    "title": "In-Class_Ex-2",
    "section": "",
    "text": "pacman::p_load(tidyverse)\n\n#import data\n\nexamdata <- read_csv(\"data_inclass2/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\npacman::p_load(tidyverse) library(readr) library(dplyr) library(tidyr)"
  },
  {
    "objectID": "In-Class-Exercise/In-Class-Ex-03.html",
    "href": "In-Class-Exercise/In-Class-Ex-03.html",
    "title": "In-Class Exercise 3",
    "section": "",
    "text": "Installing and loading R packages\n\npacman:: p_load(ggplot2,ggiraph, tidyverse)\n\nImporting data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\np <- ggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(tooltip = ID), stackgroups = TRUE, binwidth = 1, method = \"histodot\") + \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Take Home Exercises/Take-Home-Exercise-2.html",
    "href": "Take Home Exercises/Take-Home-Exercise-2.html",
    "title": "Take-Home-Exercise-2",
    "section": "",
    "text": "The following visualization that was created by a peer was used for this critique and makeover exercise."
  },
  {
    "objectID": "Take Home Exercises/Take-Home-Exercise-2.html#critique",
    "href": "Take Home Exercises/Take-Home-Exercise-2.html#critique",
    "title": "Take-Home-Exercise-2",
    "section": "Critique",
    "text": "Critique\nClarity\n\nThe dashboard initially does not seem to give a clear intention on what the graph is about at first glance because there are three panels present which make it harder to determine which one to look first.\nEvery bar has been labelled with population values which on closer inspection, makes it harder to read and determine useful information eg. the highest and lowest population figures for both males and females for each planning area.\nThe use of a single row trellis might not give a very clear comparison view of planning areas of interest because all planning areas are placed side by side.\n\nAesthetics\n\nThe use of an additional shaded box (grey) is slightly distracting as the main point is not in these shaded boxes or areas."
  },
  {
    "objectID": "Take Home Exercises/Take-Home-Exercise-2.html#makeover",
    "href": "Take Home Exercises/Take-Home-Exercise-2.html#makeover",
    "title": "Take-Home-Exercise-2",
    "section": "Makeover",
    "text": "Makeover\nSketch of the Design Remake\nThe sketch is as follows:\n\nFinal Design\n\nIn this makeover, the trellis diagram featuring 3 X 3 panels is created instead to have a holistic view of all the 9 planning areas and an instant perception of the population distribution for both females and males. The shape and distribution of male and female population compared to other planning areas can now be easier identified.\nLabels for each value of Population of each age group was not included and instead a table of the sum of populations for Males and Females respectively for each planning area is also included.\n\nRemaking visualization via R\nLoading the packages in R and creating a subset of the desired Planning Areas to visualize.\n\n\nClick here for code\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(lattice)\nlibrary(knitr)\nlibrary(patchwork)\nlibrary(ggpmisc)\n\n#import data \ndata <- read_csv(\"CSVrespopagesextod2022.csv\")\n\n#create subset of data with 9 selected planning areas \ndata1 <- data[data$PA %in% c('Ang Mo Kio', 'Bukit Merah', 'Bukit Timah', 'Hougang', 'Jurong East', 'Kallang', 'Pasir Ris','Sengkang', 'Toa Payoh'),] \nsubset(data, PA %in% c('Ang Mo Kio', 'Bukit Merah', 'Bukit Timah', 'Hougang', 'Jurong East', 'Kallang', 'Pasir Ris','Sengkang', 'Toa Payoh'))\n\n\n# A tibble: 28,576 × 7\n   PA         SZ                     AG     Sex     TOD                Pop  Time\n   <chr>      <chr>                  <chr>  <chr>   <chr>            <dbl> <dbl>\n 1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 1- and 2-Ro…     0  2022\n 2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 3-Room Flats    10  2022\n 3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 4-Room Flats    10  2022\n 4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 5-Room and …    30  2022\n 5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HUDC Flats (exc…     0  2022\n 6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Condominiums an…    50  2022\n 7 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Landed Properti…     0  2022\n 8 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Others               0  2022\n 9 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females HDB 1- and 2-Ro…     0  2022\n10 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females HDB 3-Room Flats     0  2022\n# … with 28,566 more rows\n\n\nClick here for code\n#set factor variable for AG \ndata1$AG <- factor(data1$AG, levels =c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \"40_to_44\",\"45_to_49\", \"50_to_54\", \"55_to_59\", \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90_and_over\"))\n\n#create barchart \nm_f_pyramid <- data1 %>%\n  mutate(\n    Pop = case_when(\n      Sex == \"Males\" ~ -Pop, \n      TRUE ~ Pop\n    ),\n    AG = as_factor(AG)\n  )\n  \nggp<- ggplot(m_f_pyramid ,\n        aes(x = Pop, \n            y = AG,\n            fill = Sex)) + \n    geom_col() + \n    scale_x_continuous(breaks = c(-150000, -10000, -5000, 0, 5000, 10000, 15000), labels = scales::comma(abs(c(-150000, -10000, -5000, 0, 5000, 10000, 15000)))) +\n    scale_fill_brewer(palette = \"Dark2\") + \n    theme_minimal() + \n    theme(legend.position = \"top\") + \n    facet_wrap(~PA, ncol = 3) + \n    ggtitle(\"Comparison of Male and Female Population in SG (June 2022)\") +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust = 0.5)) +\n    labs(y =\"Age range\", x = \"Population figures\")\n\n#create table for summary statistics\ntbl1 <- data1 %>%\n          group_by(PA, Sex) %>%\n          summarise(sum = sum(Pop), .groups = 'drop')\n\nggp_table <- ggplot() +                             \n  theme_void() +\n  annotate(geom = \"table\",\n           x = 1,\n           y = 1,\n           label = list(tbl1))\n\nggp + ggp_table"
  },
  {
    "objectID": "take-home-exercise-1.html",
    "href": "take-home-exercise-1.html",
    "title": "Take-Home Exercise 1",
    "section": "",
    "text": "Task Objective:\nData Source:\nBasis of selection for the 9 Planning areas:"
  },
  {
    "objectID": "take-home-exercise-1.html#data-preparation",
    "href": "take-home-exercise-1.html#data-preparation",
    "title": "Take-Home Exercise 1",
    "section": "Data Preparation",
    "text": "Data Preparation\n\n\n\n\n\n\n\n\nNo.\nDescription of Step\n\n\n\n\n\n1\nLoad data file\n\nConnect a new data source to Tableau by loading the csv file ‘CSVrespopagesextod2022’ into Tableau prep builders.\nAfter loading the file, the preview of the data would show up according to figure right.\n\nThe following columns should be view-able with the corresponding definitions:\n\nPA : Planning Area, SZ: Subzone, AG: Age group range, Sex, TOD: Type of Development, Pop: Population figure, Time: 2022\n*Since slice of data was taken for June 2022, ‘Time’ column will display the same value throughout the dataset.\n\n\n\n\n2\nData treatment (‘Sex’ column)\n\nSince Males and Females are in the same column, create 2 new columns to clearly identify population numbers for females and males separately.\nRight-click the column ‘Sex’ and locate the command ‘Create Calculated Field’\nCreate a new column named ‘Male’ with the following calculation inserted: see Figure 3. This will identify a new column for populations numbers of Males only.\nRepeat the same calculation to create a second column named ‘Female’\nAt the end of this step, you should have 2 new calculated columns created that should look like Figure 5.\n\n\n\n\nFigure 2"
  },
  {
    "objectID": "take-home-exercise-1.html#creating-the-age-gender-pyramid-in-a-trellis-view",
    "href": "take-home-exercise-1.html#creating-the-age-gender-pyramid-in-a-trellis-view",
    "title": "Take-Home Exercise 1",
    "section": "Creating the Age-Gender Pyramid in a Trellis View",
    "text": "Creating the Age-Gender Pyramid in a Trellis View\n\n\n\n\n\n\n\n\nNo.\nDescription of Step\n\n\n\n\n\n1\n\nOpen up a new sheet & rename it to ‘Age-Gender Pyramid Trellis’\nDrag the variables ‘PA’ to Columns and ‘AG’ to Rows respectively to produce a table that displays all the 55 PA as column headers and age groups as rows\n\n\n\n\n2\n\nAdd the data that is to be displayed\nDrag the calculated columns ‘Male’ and ‘Female’ to Columns respectively. The Sums of populations for both Male and Female are reported immediately in the form of a bar chart.\nSince ‘Male’ and ‘Female’ population breakdown is reported correspondingly for each Planning area (see example on the right for Ang Mo Kio)\n\n\n\n\n\n3\nSelection of 9 Planning Areas to display\n\nTo limit the 9 areas to display, drag ‘PA’ to the Filters box\nSelect the following 9 Planning Areas in the list to report. As the pre-selection has been set to report all the Planning Areas, click ‘None’ first to de-select all options before selecting the 9.\n\nAng Mo Kio\nBukit Merah\nBukit Timah\nHougang\nJurong East\nKallang\nPasir Ris\nSengkang\n\nThe result should show only the 9 selected planning areas as shown on the right.\n\n\n\n\n\n\n4\nFormatting of the Trellis Chart (Color)\n\nCreate color distinction between ‘Male’ and ‘Female’ populations by doing the following:\n\nUnder the Marks section, navigate to SUM(Male) and change the color of the marks to green. Repeat this step for SUM(Female) to change the color of the marks to pink.\n\n\n\n\n\n\n5\nFormatting of the Trellis Chart (sort AG axis)\n\nSort the y-axis to report the Age groups in descending order. Right-click the AG axis and sort in descending order\n\n\n\n\n6\nFormatting of the Trellis Chart (Pyramid effect)\n\nTo create the pyramid effect, we have the reverse the x-axis of ‘Male’\nRight-click ‘Male’ at the x-axis and click ‘Edit Axis’. Under ‘Scale’, select the ‘Reversed’ option.\nThe final result should cause the pyramid effect (see example for Bukit Merah)\n\n\n\n\n\n7\nFormatting of the Trellis Chart (Enhance visualization)\n\nClick ‘Fit Height’ above the column shelf to re-size the trellis chart to fit the height of the dashboard\nHide row & column header field because the title would already cover this\nRename the Title accordingly to ‘SG Population Age- Gender distribution over 9 Planning Areas (June 2022)’\nUnder ‘Format Lines’ click none under ‘Grid Lines’ for a cleaner look\nFormat and change the size of the PA Font to 14 , in boldface by right-clicking ‘Format’ of PA and making the changes in the Default panel\nLikewise, do the same for the Age-group y-axis by changing the Default font to size 12 and boldface\n\n\n\n\n\n\n\n\n8\nAdding labels to the diagrams\n\nAssuming target audience of the dashboard is on a working level and requires level of detail to each label, add labels for both ‘Male’ and ‘Female’ by dragging both variables to Marks as a Label\nAdjust the color of the font as necessary with format and you should be able to get the figure on the right (example for Bukit Timah)"
  },
  {
    "objectID": "In-Class-Exercise/In-Class-Ex-04.html",
    "href": "In-Class-Exercise/In-Class-Ex-04.html",
    "title": "In Class Exercise 4",
    "section": "",
    "text": "pacman::p_load(plotly, DT, patchwork, tidyverse, ggstatsplot, readxl, performance, parameters, see, gtsummary)\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH,\n        y = ~MATHS,\n        color = ~RACE)\n\n\n\n\n\nAlternative way of using plotly: ggplot2\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p) \n\n\n\n\n\nTwo-sample mean test (ggbetweenstats)\nStudent T-test assumes equal variance, hence the more appropriate test would be the Welsh test. Confidence interval is by default 95%.\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\nVisualizing Models :\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\nCan use the function asdataframe to join all the columns up together.\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n <- check_normality(model1)\n\nplot(check_n)\n\n\n\n\nPresenting the summary of Model with the characteristic, beta, CI and p-value.\n\ntbl_regression(model1, intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n-2,186\n-4,093, -278\n0.025\n    Age_08_04\n-119\n-125, -114\n<0.001\n    KM\n-0.02\n-0.03, -0.02\n<0.001\n    Weight\n20\n18, 21\n<0.001\n    Guarantee_Period\n27\n2.1, 52\n0.034\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\ncheck_model(model1)"
  }
]